{"version":3,"sources":["file:///D:/cocos/badminton/badminton/assets/Scripts/BossController.ts"],"names":["_decorator","Component","Node","Animation","Input","input","KeyCode","RigidBody2D","Vec2","Prefab","instantiate","Collider2D","Label","Contact2DType","ccclass","property","BossController","type","_starMove","_startGame","Body","bossBody","_isJump","_isMove","jumpSpeed","moveSpeed","strong","Hurt","Bat","batAnim","curBlood","intervalId","start","Player","getComponent","Boss","getChildByName","node","on","updateScore","initBoss","score","Ground","active","BgAnim","play","initInput","setInterval","curFeather","getFeather","addChild","removeAllChildren","cur","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","off","curScore","Score","string","toString","onContactFeather","selfCollider","otherCollider","contact","emit","body","linearVelocity","applyLinearImpulseToCenter","featherPrefab","block","setScale","Object","assign","hit","blockRigid","blockCollider","gravityScale","enabledContactListener","setTimeout","sensor","BEGIN_CONTACT","event","keyCode","KEY_A","KEY_D","KEY_W","KEY_J","KEY_K","KEY_U","update","deltaTime","fu","Math","random","clearInterval","applyForceToCenter","curY","y"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Animation, UIOpacity, Camera, Input, input, EventKeyboard, KeyCode, RigidBody2D, Vec3, Vec2, Prefab, instantiate, Collider2D, Label, Contact2DType, IPhysics2DContact } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('BossController')\r\nexport class BossController extends Component {\r\n    @property(Animation)\r\n    BgAnim: Animation = null;\r\n    @property({ type: Node })\r\n    Ground: Node = null;\r\n    @property({ type: Node })\r\n    Player: Node = null;\r\n    @property({ type: Node })\r\n    Boss: Node = null;\r\n\r\n    _starMove: boolean = false;\r\n    _startGame: boolean = false;\r\n    public Body: RigidBody2D | null = null;\r\n    public bossBody: RigidBody2D | null = null;\r\n\r\n    public _isJump: boolean = false;\r\n    public _isMove: boolean = false;\r\n    private jumpSpeed: number = 0;\r\n    private moveSpeed: number = 0;\r\n\r\n    private strong: number = 0;\r\n    private Hurt: number = 0;\r\n    private Bat: Node | null = null;\r\n    private batAnim: Animation | null = null;\r\n    private curBlood: number = 10;\r\n    @property({ type: Prefab })\r\n    public featherPrefab: Prefab | null = null;\r\n\r\n    @property({ type: Node })\r\n    Score: Node = null;\r\n    start() {\r\n        this.Body = this.Player.getComponent(RigidBody2D);\r\n        this.bossBody = this.Boss.getComponent(RigidBody2D);\r\n        this.Bat = this.Player.getChildByName(\"Bat\");\r\n        this.batAnim = this.Bat.getComponent(Animation);\r\n        this.node.on('hitBlood', this.updateScore, this);\r\n    }\r\n    private intervalId;\r\n    initBoss(score: number) {\r\n        this.Ground.active = true;\r\n        this.BgAnim.play('bg4appear');\r\n        this.initInput(true);\r\n        this._startGame = true;\r\n        this.strong = score;\r\n        this.intervalId = setInterval(() => {\r\n            let curFeather = this.getFeather();\r\n            if (curFeather) this.Boss.addChild(curFeather);\r\n        }, 500);\r\n        setInterval(() => {\r\n            this.Boss.removeAllChildren();\r\n        }, 10000);\r\n    }\r\n    initInput(cur: boolean) {\r\n        if (cur) {\r\n            input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\r\n            input.on(Input.EventType.KEY_UP, this.onKeyUp, this);\r\n        } else {\r\n            input.off(Input.EventType.KEY_DOWN, this.onKeyDown, this);\r\n            input.off(Input.EventType.KEY_UP, this.onKeyUp, this);\r\n        }\r\n    }\r\n    updateScore(curScore: number) {\r\n        this.curBlood -= curScore;\r\n        this.Score.getComponent(Label).string = this.curBlood.toString();\r\n    }\r\n    onContactFeather(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        if (otherCollider.node == this.Boss) this.node.emit('hitBlood', this.strong);\r\n        if (otherCollider.node == this.Player) {\r\n            selfCollider.body.linearVelocity = new Vec2(0, 0);\r\n            selfCollider.body.applyLinearImpulseToCenter(new Vec2(10, 10), true);\r\n        }\r\n        if (otherCollider.node == this.Bat) {\r\n            selfCollider.body.linearVelocity = new Vec2(0, 0);\r\n            selfCollider.body.applyLinearImpulseToCenter(new Vec2(100, 100), true);\r\n        }\r\n    }\r\n    getFeather() {\r\n        if (!this.featherPrefab) {\r\n            return null;\r\n        }\r\n        let block: Node | null = null;\r\n        block = instantiate(this.featherPrefab);\r\n        block.setScale(2, 2);\r\n        Object.assign(block, { hit: 0 });\r\n        let blockRigid = block.getComponent(RigidBody2D);\r\n        let blockCollider = block.getComponent(Collider2D);\r\n        blockRigid.gravityScale = 1;\r\n        blockRigid.enabledContactListener = false;\r\n        setTimeout(() => {\r\n            blockRigid.enabledContactListener = true;\r\n        }, 1000);\r\n        blockCollider.sensor = false;\r\n        if (blockCollider) {\r\n            blockCollider.on(Contact2DType.BEGIN_CONTACT, this.onContactFeather, this);\r\n        }\r\n        return block;\r\n    }\r\n    onKeyDown(event: EventKeyboard) {\r\n        switch (event.keyCode) {\r\n            case KeyCode.KEY_A:\r\n                this.Player.setScale(-1, 1);\r\n                this._isMove = true;\r\n                this.moveSpeed = -10;\r\n                break;\r\n            case KeyCode.KEY_D:\r\n                this.Player.setScale(1, 1);\r\n                this._isMove = true;\r\n                this.moveSpeed = 10;\r\n                break;\r\n            case KeyCode.KEY_W:\r\n                this._isJump = true;\r\n                this.jumpSpeed = 500;\r\n                break;\r\n            case KeyCode.KEY_J:\r\n                this.Hurt = 1;\r\n                this.batAnim.play('batsmall');\r\n                break;\r\n            case KeyCode.KEY_K:\r\n                this.Hurt = 0;\r\n                this.batAnim.play('batstop');\r\n                break;\r\n            case KeyCode.KEY_U:\r\n                this.Hurt = 3;\r\n                this.batAnim.play('batbig');\r\n                break;\r\n        }\r\n    }\r\n    onKeyUp(event: EventKeyboard) {\r\n        switch (event.keyCode) {\r\n            case KeyCode.KEY_A:\r\n                this._isMove = false;\r\n                this.moveSpeed = 0;\r\n                break;\r\n            case KeyCode.KEY_D:\r\n                this._isMove = false;\r\n                this.moveSpeed = 0;\r\n                break;\r\n            case KeyCode.KEY_W:\r\n        }\r\n    }\r\n    update(deltaTime: number) {\r\n        if (this._startGame) {\r\n            let fu = Math.random() > 0.5 ? 1 : -1;\r\n            this.bossBody.linearVelocity = new Vec2(fu * Math.random() * 20, fu * Math.random() * 20);\r\n            if (this.curBlood < 0) {\r\n                clearInterval(this.intervalId);\r\n                this.Boss.removeAllChildren();\r\n                this.Score.getComponent(Label).string = 'YOU WIN!';\r\n                this._startGame = false;\r\n            }\r\n        }\r\n        if (this._isJump) {\r\n            this.Body.applyForceToCenter(new Vec2(0, this.jumpSpeed), true);\r\n            this._isJump = false;\r\n        }\r\n        if (this._isMove) {\r\n            let curY = this.Body.linearVelocity;\r\n            this.Body.linearVelocity = new Vec2(this.moveSpeed, curY.y);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}