{"version":3,"sources":["file:///D:/cocos/badminton/badminton/assets/Scripts/GameManager.ts"],"names":["_decorator","Component","Vec3","Node","Prefab","CCInteger","instantiate","PlayerController","ccclass","property","GameState","BlockType","BlockSizeX","BlockSizeY","GameManger","type","roadHeight","_road","start","setCurState","GS_INIT","oneTotwo","startButton1","active","startMenu1","startMenu2","startExit","startStart","startSettings","twoTogame","gameGround1","initPosition","player","startGame","init","generateRoad","playerCtrl","initInput","value","GS_PLAYING","GS_END","node","removeAllChildren","i","_roadCur","j","roadLength","Math","floor","random","block","spawnBlockByType","addChild","setPosition","BT_STONE","boxPrefab","BT_FIRE","firePrefab","BT_FEATHER","featherPrefab","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Vec3, EventMouse, input, Input, Animation, Node, Prefab, CCInteger, instantiate } from 'cc';\r\nimport { PlayerController } from './PlayerController';\r\nconst { ccclass, property } = _decorator;\r\n\r\nenum GameState {\r\n    GS_INIT,\r\n    GS_PLAYING,\r\n    GS_END,\r\n};\r\n\r\nenum BlockType {\r\n    BT_NONE,\r\n    BT_STONE,\r\n    BT_FIRE,\r\n    BT_FEATHER,\r\n};\r\nconst BlockSizeX = 50;\r\nconst BlockSizeY = 75;\r\n@ccclass('GameManger')\r\nexport class GameManger extends Component {\r\n    @property({ type: Node })\r\n    startButton1: Node = null;//从第一个开始界面调到第二个界面的按钮\r\n    @property({ type: Node })\r\n    startMenu1: Node = null;//第一个背景\r\n    @property({ type: Node })\r\n    startMenu2: Node = null;\r\n    @property({ type: Node })\r\n    startSettings: Node = null;\r\n    @property({ type: Node })\r\n    startStart: Node = null;\r\n    @property({ type: Node })\r\n    startExit: Node = null;\r\n    @property({ type: Node })\r\n    gameGround1: Node = null;\r\n    @property({ type: Node })\r\n    gameGround2: Node = null;\r\n    @property({ type: Node })\r\n    player: Node = null;\r\n    @property({ type: Prefab })\r\n    public boxPrefab: Prefab | null = null;\r\n    @property({ type: Prefab })\r\n    public featherPrefab: Prefab | null = null;\r\n    @property({ type: Prefab })\r\n    public firePrefab: Prefab | null = null;\r\n    @property({ type: CCInteger })\r\n    public roadLength: number = 100;\r\n\r\n    public roadHeight: number = 100;\r\n\r\n    private _road = [];\r\n\r\n    @property({ type: PlayerController })\r\n    public playerCtrl: PlayerController | null = null;\r\n\r\n    start() {\r\n        this.setCurState(GameState.GS_INIT);\r\n    }\r\n    oneTotwo() {\r\n        this.startButton1.active = false;\r\n        this.startMenu1.active = false;\r\n        this.startMenu2.active = true;\r\n        this.startExit.active = true;\r\n        this.startStart.active = true;\r\n        this.startSettings.active = true;\r\n    }\r\n    twoTogame() {\r\n        this.startMenu2.active = false;\r\n        this.startExit.active = false;\r\n        this.startStart.active = false;\r\n        this.startSettings.active = false;\r\n        this.gameGround1.active = true;\r\n        let initPosition: Vec3 = new Vec3(-565, -240, 0);\r\n        //        this.player.setPosition(initPosition);\r\n        this.player.active = true;\r\n        this.startGame();\r\n    }\r\n    init() {\r\n    }\r\n    startGame() {\r\n        this.generateRoad();\r\n        this.playerCtrl.initInput(true);\r\n    }\r\n    setCurState(value: GameState) {\r\n        switch (value) {\r\n            case GameState.GS_INIT:\r\n                this.init();\r\n                break;\r\n            case GameState.GS_PLAYING:\r\n                this.startGame();\r\n                break;\r\n            case GameState.GS_END:\r\n                break;\r\n        }\r\n    }\r\n\r\n    //生成地块\r\n    generateRoad() {\r\n        this.node.removeAllChildren();\r\n        this._road = [];\r\n        for (let i = 1; i <= this.roadHeight; i++) {\r\n            let _roadCur: BlockType[] = [];\r\n            for (let j = 1; j <= this.roadLength; j++) {\r\n                if ((i % 2 == 1)) {\r\n                    _roadCur[j] = Math.floor(Math.random() * 2);\r\n                }\r\n                else {\r\n                    _roadCur[j] = 0;\r\n                }\r\n            }\r\n            this._road[i] = _roadCur;\r\n        }\r\n        for (let i = 1; i <= this.roadHeight; i++) {\r\n            for (let j = 1; j <= this.roadLength; j++) {\r\n                let block: Node | null = this.spawnBlockByType(this._road[i][j]);\r\n                if (j - 1 != 0) {\r\n                    if (block) {\r\n                        this.node.addChild(block);\r\n                        block.setPosition((j - 1) * BlockSizeY, (i - 50) * BlockSizeX, 0);\r\n                    }\r\n                } else if (i - 50 == -1) {\r\n                    block = this.spawnBlockByType(BlockType.BT_STONE);\r\n                    this.node.addChild(block);\r\n                    block.setPosition((j - 1) * BlockSizeY, (i - 50) * BlockSizeX, 0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    spawnBlockByType(type: BlockType) {\r\n        if (!this.boxPrefab) {\r\n            return null;\r\n        }\r\n        let block: Node | null = null;\r\n        switch (type) {\r\n            case BlockType.BT_STONE:\r\n                block = instantiate(this.boxPrefab);\r\n                break;\r\n            case BlockType.BT_FIRE:\r\n                block = instantiate(this.firePrefab);\r\n                break;\r\n            case BlockType.BT_FEATHER:\r\n                block = instantiate(this.featherPrefab);\r\n                break;\r\n        }\r\n        return block;\r\n    }\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n"]}