{"version":3,"sources":["file:///D:/cocos/badminton/badminton/assets/Scripts/GameManager.ts"],"names":["_decorator","Component","Vec3","Node","ccclass","property","GameState","GameManger","type","start","setCurState","GS_INIT","oneTotwo","startButton1","active","startMenu1","startMenu2","startExit","startStart","startSettings","startGame","twoTogame","gameGround1","initPosition","player","setPosition","init","generateRoad","value","GS_PLAYING","GS_END","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Vec3, EventMouse, input, Input, Animation, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\nenum GameState {\r\n    GS_INIT,\r\n    GS_PLAYING,\r\n    GS_END,\r\n};\r\n\r\n@ccclass('GameManger')\r\nexport class GameManger extends Component {\r\n    @property({ type: Node })\r\n    startButton1: Node = null;//从第一个开始界面调到第二个界面的按钮\r\n    @property({ type: Node })\r\n    startMenu1: Node = null;//第一个背景\r\n    @property({ type: Node })\r\n    startMenu2: Node = null;\r\n    @property({ type: Node })\r\n    startSettings: Node = null;\r\n    @property({ type: Node })\r\n    startStart: Node = null;\r\n    @property({ type: Node })\r\n    startExit: Node = null;\r\n    @property({ type: Node })\r\n    gameGround1: Node = null;\r\n    @property({ type: Node })\r\n    gameGround2: Node = null;\r\n    @property({ type: Node })\r\n    player: Node = null;\r\n    start() {\r\n        this.setCurState(GameState.GS_INIT);\r\n    }\r\n    oneTotwo() {\r\n        this.startButton1.active = false;\r\n        this.startMenu1.active = false;\r\n        this.startMenu2.active = true;\r\n        this.startExit.active = true;\r\n        this.startStart.active = true;\r\n        this.startSettings.active = true;\r\n        this.startGame();\r\n\r\n    }\r\n    twoTogame() {\r\n        this.startMenu2.active = false;\r\n        this.startExit.active = false;\r\n        this.startStart.active = false;\r\n        this.startSettings.active = false;\r\n        this.gameGround1.active = true;\r\n        let initPosition: Vec3 = new Vec3(-565, -240, 0);\r\n        this.player.setPosition(initPosition);\r\n        this.player.active = true;\r\n    }\r\n    init() {\r\n        this.generateRoad();\r\n    }\r\n    startGame() {\r\n    }\r\n    setCurState(value: GameState) {\r\n        switch (value) {\r\n            case GameState.GS_INIT:\r\n                this.init();\r\n                break;\r\n            case GameState.GS_PLAYING:\r\n                this.startGame();\r\n                break;\r\n            case GameState.GS_END:\r\n                break;\r\n        }\r\n    }\r\n\r\n    generateRoad() {\r\n    }\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n\r\n\r\n"]}