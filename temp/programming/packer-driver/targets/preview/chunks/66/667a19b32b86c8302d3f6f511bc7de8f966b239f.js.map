{"version":3,"sources":["file:///D:/cocos/badminton/badminton/assets/Scripts/BossController.ts"],"names":["_decorator","Component","Node","Animation","Input","input","ccclass","property","BossController","type","start","initBoss","Ground","active","BgAnim","play","initInput","cur","on","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","off","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,S,OAAAA,S;AAA8BC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,K,OAAAA,K;;;;;;;;;OACrE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;gCAGjBQ,c,WADZF,OAAO,CAAC,gBAAD,C,UAEHC,QAAQ,CAACJ,SAAD,C,UAERI,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEP;AAAR,OAAD,C,UAERK,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEP;AAAR,OAAD,C,UAERK,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEP;AAAR,OAAD,C,2BARb,MACaM,cADb,SACoCP,SADpC,CAC8C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAU1CS,QAAAA,KAAK,GAAG,CACP;;AACDC,QAAAA,QAAQ,GAAG;AACP,eAAKC,MAAL,CAAYC,MAAZ,GAAqB,IAArB;AACA,eAAKC,MAAL,CAAYC,IAAZ,CAAiB,WAAjB;AACH;;AACDC,QAAAA,SAAS,CAACC,GAAD,EAAe;AACpB,cAAIA,GAAJ,EAAS;AACLZ,YAAAA,KAAK,CAACa,EAAN,CAASd,KAAK,CAACe,SAAN,CAAgBC,QAAzB,EAAmC,KAAKC,SAAxC,EAAmD,IAAnD;AACAhB,YAAAA,KAAK,CAACa,EAAN,CAASd,KAAK,CAACe,SAAN,CAAgBG,MAAzB,EAAiC,KAAKC,OAAtC,EAA+C,IAA/C;AACH,WAHD,MAGO;AACHlB,YAAAA,KAAK,CAACmB,GAAN,CAAUpB,KAAK,CAACe,SAAN,CAAgBC,QAA1B,EAAoC,KAAKC,SAAzC,EAAoD,IAApD;AACAhB,YAAAA,KAAK,CAACmB,GAAN,CAAUpB,KAAK,CAACe,SAAN,CAAgBG,MAA1B,EAAkC,KAAKC,OAAvC,EAAgD,IAAhD;AACH;AACJ;;AACDF,QAAAA,SAAS,GAAG,CAEX;;AACDE,QAAAA,OAAO,GAAG,CAET;;AACDE,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAjCyC,O;;;;;iBAEtB,I;;;;;;;iBAEL,I;;;;;;;iBAEA,I;;;;;;;iBAEF,I","sourcesContent":["import { _decorator, Component, Node, Animation, UIOpacity, Camera, Input, input, EventKeyboard, KeyCode } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('BossController')\r\nexport class BossController extends Component {\r\n    @property(Animation)\r\n    BgAnim: Animation = null;\r\n    @property({ type: Node })\r\n    Ground: Node = null;\r\n    @property({ type: Node })\r\n    Player: Node = null;\r\n    @property({ type: Node })\r\n    Boss: Node = null;\r\n\r\n    start() {\r\n    }\r\n    initBoss() {\r\n        this.Ground.active = true;\r\n        this.BgAnim.play('bg4appear');\r\n    }\r\n    initInput(cur: boolean) {\r\n        if (cur) {\r\n            input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\r\n            input.on(Input.EventType.KEY_UP, this.onKeyUp, this);\r\n        } else {\r\n            input.off(Input.EventType.KEY_DOWN, this.onKeyDown, this);\r\n            input.off(Input.EventType.KEY_UP, this.onKeyUp, this);\r\n        }\r\n    }\r\n    onKeyDown() {\r\n\r\n    }\r\n    onKeyUp() {\r\n\r\n    }\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n\r\n\r\n"]}