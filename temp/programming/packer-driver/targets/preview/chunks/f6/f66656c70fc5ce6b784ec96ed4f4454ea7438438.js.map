{"version":3,"sources":["file:///D:/cocos/badminton/badminton/assets/Scripts/PlayerController.ts"],"names":["_decorator","Component","input","Input","KeyCode","Vec3","ccclass","property","PlayerController","_starMove","_curPos","_tarPos","start","initInput","cur","on","EventType","KEY_PRESSING","onKeyDown","KEY_DOWN","off","move","retx","rety","_speed","node","getPosition","add","event","keyCode","KEY_A","getChildByName","setScale","KEY_D","KEY_W","KEY_S","update","deltaTime","setPosition"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;AAAaC,MAAAA,K,OAAAA,K;AAAsBC,MAAAA,O,OAAAA,O;AAASC,MAAAA,I,OAAAA,I;;;;;;;;;OACtE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;kCAGjBQ,gB,WADZF,OAAO,CAAC,kBAAD,C,gBAAR,MACaE,gBADb,SACsCP,SADtC,CACgD;AAAA;AAAA;AAAA,eAC5CQ,SAD4C,GACvB,KADuB;AAAA,eAEpCC,OAFoC,GAEpB,IAAIL,IAAJ,EAFoB;AAAA,eAGpCM,OAHoC,GAGpB,IAAIN,IAAJ,EAHoB;AAAA;;AAI5CO,QAAAA,KAAK,GAAG,CAEP;;AAEDC,QAAAA,SAAS,CAACC,GAAD,EAAe;AACpB,cAAIA,GAAJ,EAAS;AACLZ,YAAAA,KAAK,CAACa,EAAN,CAASZ,KAAK,CAACa,SAAN,CAAgBC,YAAzB,EAAuC,KAAKC,SAA5C,EAAuD,IAAvD;AACAhB,YAAAA,KAAK,CAACa,EAAN,CAASZ,KAAK,CAACa,SAAN,CAAgBG,QAAzB,EAAmC,KAAKD,SAAxC,EAAmD,IAAnD,EAFK,CAGL;AACH,WAJD,MAIO;AACHhB,YAAAA,KAAK,CAACkB,GAAN,CAAUjB,KAAK,CAACa,SAAN,CAAgBC,YAA1B,EAAwC,KAAKC,SAA7C,EAAwD,IAAxD;AACAhB,YAAAA,KAAK,CAACkB,GAAN,CAAUjB,KAAK,CAACa,SAAN,CAAgBG,QAA1B,EAAoC,KAAKD,SAAzC,EAAoD,IAApD,EAFG,CAGH;AACH;AACJ;;AAEDG,QAAAA,IAAI,CAACC,IAAD,EAAeC,IAAf,EAA6B;AAC7B,eAAKd,SAAL,GAAiB,IAAjB;AACA,cAAIe,MAAc,GAAG,EAArB;AACA,eAAKC,IAAL,CAAUC,WAAV,CAAsB,KAAKhB,OAA3B;AACAL,UAAAA,IAAI,CAACsB,GAAL,CAAS,KAAKhB,OAAd,EAAuB,KAAKD,OAA5B,EAAqC,IAAIL,IAAJ,CAASmB,MAAM,GAAGF,IAAlB,EAAwBE,MAAM,GAAGD,IAAjC,EAAuC,CAAvC,CAArC;AACH;;AAEDL,QAAAA,SAAS,CAACU,KAAD,EAAuB;AAC5B,kBAAQA,KAAK,CAACC,OAAd;AACI,iBAAKzB,OAAO,CAAC0B,KAAb;AACI,mBAAKL,IAAL,CAAUM,cAAV,CAAyB,QAAzB,EAAmCC,QAAnC,CAA4C,CAAC,CAA7C,EAAgD,CAAhD;AACA,mBAAKX,IAAL,CAAU,CAAC,CAAX,EAAc,CAAd;AACA;;AACJ,iBAAKjB,OAAO,CAAC6B,KAAb;AACI,mBAAKR,IAAL,CAAUM,cAAV,CAAyB,QAAzB,EAAmCC,QAAnC,CAA4C,CAA5C,EAA+C,CAA/C;AACA,mBAAKX,IAAL,CAAU,CAAV,EAAa,CAAb;AACA;;AACJ,iBAAKjB,OAAO,CAAC8B,KAAb;AACI;AACA,mBAAKb,IAAL,CAAU,CAAV,EAAa,CAAb;AACA;;AACJ,iBAAKjB,OAAO,CAAC+B,KAAb;AACI,mBAAKd,IAAL,CAAU,CAAV,EAAa,CAAC,CAAd;AACA;AAfR;AAiBH;;AAEDe,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,cAAI,KAAK5B,SAAT,EAAoB;AAChB,iBAAKgB,IAAL,CAAUa,WAAV,CAAsB,KAAK3B,OAA3B;AACH;AACJ;;AAnD2C,O","sourcesContent":["import { _decorator, Component, input, Node, Input, EventKeyboard, KeyCode, Vec3 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PlayerController')\r\nexport class PlayerController extends Component {\r\n    _starMove: boolean = false;\r\n    private _curPos: Vec3 = new Vec3;\r\n    private _tarPos: Vec3 = new Vec3;\r\n    start() {\r\n\r\n    }\r\n\r\n    initInput(cur: boolean) {\r\n        if (cur) {\r\n            input.on(Input.EventType.KEY_PRESSING, this.onKeyDown, this);\r\n            input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\r\n            //           input.on(Input.EventType.KEY_UP, this.onKeyUp, this);\r\n        } else {\r\n            input.off(Input.EventType.KEY_PRESSING, this.onKeyDown, this);\r\n            input.off(Input.EventType.KEY_DOWN, this.onKeyDown, this);\r\n            //           input.off(Input.EventType.KEY_UP, this.onKeyUp, this);\r\n        }\r\n    }\r\n\r\n    move(retx: number, rety: number) {\r\n        this._starMove = true;\r\n        let _speed: number = 20;\r\n        this.node.getPosition(this._curPos);\r\n        Vec3.add(this._tarPos, this._curPos, new Vec3(_speed * retx, _speed * rety, 0));\r\n    }\r\n\r\n    onKeyDown(event: EventKeyboard) {\r\n        switch (event.keyCode) {\r\n            case KeyCode.KEY_A:\r\n                this.node.getChildByName(\"Player\").setScale(-1, 1);\r\n                this.move(-1, 0);\r\n                break;\r\n            case KeyCode.KEY_D:\r\n                this.node.getChildByName(\"Player\").setScale(1, 1);\r\n                this.move(1, 0);\r\n                break;\r\n            case KeyCode.KEY_W:\r\n                //this.node.getChildByName(\"Player\").setScale(1, 1);\r\n                this.move(0, 1);\r\n                break;\r\n            case KeyCode.KEY_S:\r\n                this.move(0, -1);\r\n                break;\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if (this._starMove) {\r\n            this.node.setPosition(this._tarPos);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}